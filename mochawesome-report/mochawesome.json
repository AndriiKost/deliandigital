{
  "stats": {
    "suites": 3,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2019-02-25T17:14:21.487Z",
    "end": "2019-02-25T17:14:22.768Z",
    "duration": 1281,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "dc6aaa35-d098-485b-9f4b-fe6e99770899",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "dbc44fcf-7431-403d-91e0-d1ebb40c2b06",
        "title": "GET /api/test",
        "fullFile": "/Users/andriikost/Desktop/Angular/deliandigital/tests/client_inquiries.test.js",
        "file": "/tests/client_inquiries.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should respond with 200 and status success",
            "fullTitle": "GET /api/test should respond with 200 and status success",
            "timedOut": false,
            "duration": 25,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)\n.get('/api/test')\n.end((err, res) => {\n// there should be no errors\nshould.not.exist(err);\n// there should be a 200 status code\nres.status.should.equal(200);\n// the response should be JSON\nres.type.should.equal('application/json');\n// the JSON response body should have a\n// key-value pair of {\"status\": \"success\"}\nres.body.status.should.eql('success');\n// the JSON response body should have a\n// key-value pair of {\"data\": [2 user objects]}\n// res.body.data.length.should.eql(2);\n// the first object in the data array should\n// have the right keys\n// res.body.data[0].should.include.keys(\n// 'id', 'username', 'email', 'created_at'\n// );\ndone();\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "a30c66ec-3d80-4f74-9225-f7db3d05aa68",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "a30c66ec-3d80-4f74-9225-f7db3d05aa68"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 25,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "9e64d874-f52f-4e81-9e66-36f22fbe0741",
        "title": "GET /api/estimate",
        "fullFile": "/Users/andriikost/Desktop/Angular/deliandigital/tests/client_inquiries.test.js",
        "file": "/tests/client_inquiries.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should respond with user's estimate and 200 code",
            "fullTitle": "GET /api/estimate should respond with user's estimate and 200 code",
            "timedOut": false,
            "duration": 633,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)\n.get(`/api/estimate/${randomString()}/${randomString()}/${randomString()}/${randomString()}`)\n.end((err, res) => {\n    should.not.exist(err);\n    res.status.should.equal(200);\n    res.type.should.equal('application/json');\n    res.body.status.should.eql('success');\n    // res.body.data.length.should.eql(2);\n    // console.log(res.body.estimate)\n    res.body.estimate.should.include.keys(\n    '_id', 'name', 'email', 'projectCost', 'projectDuration'\n    );\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "f2b20bbc-bfa6-4d42-b205-971f275261b2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should save document in mongoDB document",
            "fullTitle": "GET /api/estimate should save document in mongoDB document",
            "timedOut": false,
            "duration": 68,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const name = randomString()\nconst email = randomString()\nconst projectCost = randomString()\nconst projectDuration = randomString()\nchai.request(server)\n.get(`/api/estimate/${name}/${email}/${projectDuration}/${projectCost}`)\n.end((err, res) => {\n    should.not.exist(err);\n    res.status.should.equal(200);\n    res.type.should.equal('application/json');\n    res.body.status.should.eql('success');\n    const id = res.body.estimate._id;\n    Estimate.findById(id, (err, data) => {\n        should.not.exist(err);\n        if (data.name !== name) { throw new Error('No name found in posted collection!') }\n        if (data.email !== email) { throw new Error('No email found in posted collection!') }\n        if (data.projectCost !== projectCost) { throw new Error('No projectCost found in posted collection!') }\n        if (data.projectDuration !== projectDuration) { throw new Error('No projectDuration found in posted collection!') }\n    })\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "1a5c52a0-9f91-471c-80b6-2d3a3696cd89",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "f2b20bbc-bfa6-4d42-b205-971f275261b2",
          "1a5c52a0-9f91-471c-80b6-2d3a3696cd89"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 701,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "436b7271-f03b-4850-83e6-66425728d382",
        "title": "POST /api/new-estimate",
        "fullFile": "/Users/andriikost/Desktop/Angular/deliandigital/tests/client_inquiries.test.js",
        "file": "/tests/client_inquiries.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should respond with user's estimate and 200 code",
            "fullTitle": "POST /api/new-estimate should respond with user's estimate and 200 code",
            "timedOut": false,
            "duration": 463,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)\n.post(`/api/new-estimate`)\n.send({\n    \"name\": randomString(),\n    \"email\": randomString(),\n    \"projectCost\": randomString(),\n    \"projectDuration\": randomString()\n})\n.end((err, res) => {\n    should.not.exist(err);\n    res.status.should.equal(200);\n    res.type.should.equal('application/json');\n    res.body.should.include.keys(\n    '_id', 'name', 'email', 'projectCost', 'projectDuration'\n    );\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "ec4e01a2-3d03-4e2a-90af-7f0bdfe90fbe",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should save document in mongoDB document",
            "fullTitle": "POST /api/new-estimate should save document in mongoDB document",
            "timedOut": false,
            "duration": 67,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const name = randomString()\nconst email = randomString()\nconst projectCost = randomString()\nconst projectDuration = randomString()\nchai.request(server)\n.post(`/api/new-estimate`)\n.send({\n    \"name\": name,\n    \"email\": email,\n    \"projectCost\": projectCost,\n    \"projectDuration\": projectDuration\n})\n.end((err, res) => {\n    should.not.exist(err);\n    res.status.should.equal(200);\n    const id = res.body._id;\n    Estimate.findById(id, (err, data) => {\n        should.not.exist(err);\n        // console.log(`DATA IS HERER => ${data}`)\n        if (data.name !== name) { throw new Error('No name found in posted collection!') }\n        if (data.email !== email) { throw new Error('No email found in posted collection!') }\n        if (data.projectCost !== projectCost) { throw new Error('No projectCost found in posted collection!') }\n        if (data.projectDuration !== projectDuration) { throw new Error('No projectDuration found in posted collection!') }\n    })\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "89625d5a-9a49-4b1d-8524-6fa03518b78e",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "ec4e01a2-3d03-4e2a-90af-7f0bdfe90fbe",
          "89625d5a-9a49-4b1d-8524-6fa03518b78e"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 530,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 10000
  },
  "copyrightYear": 2019
}